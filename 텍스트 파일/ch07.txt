상속

부모 클래스의 필드와 메소드를 자식 클래스에게 물려줄 수 있음

상속의 이점
이미 개발된 클래스를 재사용하므로 중복 코드를 줄임
클래스 수정을 최소화

Has A
IS A 관계 워크샵 진

자바에서 다중상속은 안됨

this.
this()
super.

메소드 오버라이딩
상속된 메소드를 자식 클래스에서 재정의하는 것. 해당 부모 메소드는 숨겨지고, 자식 메소드가 우선적으로 사용
메소드 시그니처가 동일해야함
접근 제한을 더 강하게 오버라이딩 할 수 없음 (public -> private으로 변경 불가)
새로운 예외를 throws할 수 없음

부모 메소드 호출

자식 메소드 내에서 super 키워드와 도트(.) 연산자를 사용하면 숨겨진 부모 메소드를 호출
부모 메소드를 재사용함으로써 자식 메소드의 중복 작업 내용을 없애는 효과

자동 타입 변환
type의 다형성
자동적으로 타입 변환이 일어나는 것

부모타입 변수 = 자식타입객체; (자식타입객체에서 부모타입 변수로 자동타입 변환이 일어난다)

부모타입 변수가 자식타입 객체보다 아래에 있으면 안된다.


강제 타입 변환
부모 타입은 자식 타입으로 자동 변환되지 않음. 대신 캐스팅 연산자로 강제 타입 변환 가능
자식 객체가 부모 타입으로 자동 변환하면 부모 타입에 선언된 필드와 메소드만 사용 가능



다형성
사용 방법은 동일하지만 실행결과가 다양하게 나오는 성질
다형성을 구현하기 위해서는 자동 타입 변환과 메소드 재정의가 필요

자동 타입변환 + 메소드 오버라이딩 = 다형성

매개변수 다형성
메소드가 클래스 타입의 매개변수를 가지고 있을 경우, 호출할 때 동일한 타입의 자식 객체를 제공할 수 있음
어떤 자식 객체가 제공되느냐에 따라서 메소드의 실행 결과가 달라짐


자동 제너레이터 하는법
마우스 우클릭 -> source -> Generate to~~ 되어있는것 제너레이터 하고싶은 변수, 메서드 선택하여 실행하기


추상 클래스
객체를 생성할 수 있는 실체 클래스들의 공통적인 필드나 메소드를 추출해서 선언한 클래스
추상 클래스는 실체 클래스의 부모 역할, 공통적인필드나 메소드를 물려받을 수 있음

추상 클래스 선언
클래스 선언에 abstract 키워드를 붙임
new 연산자를 이용해서 객체를 직접 만들지 못하고 상속을 통해 자식 클래스만 만들 수 있다.

추상 메소드와 재정의
자식 클래스들이 가지고 있는 공통 메소드를 뽑아내어 추상 클래스로 작성할 때, 메소드 선언부만 동일하고 실행 내용은 자식클래스마다 달라야 하는 경우 추상 메소드를 선언할 수 있음
일반 메소드 선언과의 차이점은 abstract 키워드가 붙고, 메소드 실행 내용인 중괄호 {} 가 없다.
abstract 리턴타입 메소드면 (매개변수, ...);

abstract class ~
" field
" method




