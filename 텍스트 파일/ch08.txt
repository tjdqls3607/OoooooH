인터페이스

두 객체를 연결하는 역할
다형성 구현에 주된 기술

인터페이스 선언
인터페이스 선언은 class 키워드 대신 interface 키워드를 사용

접근 제한자로는 클래스와 마찬가지로 같은 패키지 내에서만 사용 가능한 default, 패키지와 상관없이
사용하는 public 을 붙일 수 있음

구현 클래스 선언
인터페이스에 정의된 추상 메소드에 대한 실행 내용이 구현
implements 키워드는 해당 클래스가 인터페이스를 통해 사용할 수 있다는 표시이며 인터페이스의 추상 메소드를 재정의한 메소드가 있다는 뜻
public class B implements 인터페이스명 {...}

변수 선언과 구현 객체 대입
인터페이스는 참조 타입에 속하므로 인터페이스 변수에는 객체를 참조하고 있지 않다는 뜻으로 null을 대입할 수 있음

상수 필드
인터페이스는 public static final 특성을 갖는 불변의 상수 필드를 멤버로 가질 수 있음
[public static final] 타입 상수명 = 값;

디폴트 메소드
인터페이스에는 완전한실행 코드를 가진 디폴트 메소드를 선언할 수 있음
추상 메소드는 실행부 (중괄호{})가 없지만 디폴트 메소드는 실행부 있음. default키워드가 리턴 타입 앞에 붙음
[public] default 리턴타입 메소드명(매개변수, ...){...}

디폴트 메소드의 실행부에는 상수 필드를 읽거나 추상 메소드를 호출하는 코드를 작성할 수 있음


인터페이스 상속
인터페이스도 다른 인터페이스를 상속할 수 있음. 다중 상속을 허용
extends 키워드 뒤에 상속할 인터페이스들을 나열

public interface 자식인터페이스 extends 부모인터페이스1, 부모인터페이스2{...}

자식 인터페이스의 구현 클래스는 자식 인터페이스의 메소드뿐만 아니라 부모 인터페이스의 모든 추상 메소드를 재정의
구현 객체는 다음과 같이 자식 및 부모 인터페이스 변수에 대입될 수 있음

다형성
사용 방법은 동일하지만 다양한 결과가 나오는 설질

인터페이스 역시 다형성을 구현하기 위해 재정의와 자동 타입 변환 기능을 이용



